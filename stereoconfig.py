import cv2
import numpy as np

"""
left_matrix
1347.17668190533	3.08081304622417	634.708237373307
0	1341.58257110610	252.690759165404
0	0	1

left_dis
-0.444822247238704	0.261316510320998
0.0110005400036386	-0.00140075292209875

right_matrix
1350.72970995131	7.25259054734035	627.766009732871
0	1349.18547212602	280.627199637903
0	0	1
right_dis
-0.468025761860949	0.307277786530013
0.00747140860017280	-0.00224806305881539

Rotation
0.999998179828457	0.00127821218203602	-0.00141651452161726
-0.00129949269388087	0.999884759087284	-0.0151254706935691
0.00139701772029137	0.0151272839128893	0.999884600152892

Translation
-59.8667462521353	-5.71863444105345	1.96483141695922
"""

# ************************************Little Stereo Param_CalibByHand*****************************************
left_camera_matrix = np.array([[1347.17668190533, 3.08081304622417, 634.708237373307],
                               [0, 1341.58257110610, 252.690759165404],
                               [0, 0, 1]])

left_distortion = np.array([[-0.444822247238704, 0.261316510320998, 0, 0.0110005400036386, -0.00140075292209875]])

right_camera_matrix = np.array([[1350.72970995131, 7.25259054734035, 627.766009732871],
                                [0, 1349.18547212602, 280.627199637903],
                                [0, 0, 1]])

right_distortion = np.array([[-0.468025761860949, 0.307277786530013, 0, 0.00747140860017280, -0.00224806305881539]])

R = np.matrix([
    [0.999998179828457, 0.00127821218203602, -0.00141651452161726],
    [-0.00129949269388087, 0.999884759087284, -0.0151254706935691],
    [0.00139701772029137, 0.0151272839128893, 0.999884600152892],
])

print(R)

T = np.array([ -59.8667462521353, -5.71863444105345, 1.96483141695922])  # 平移关系向量

size = (1280, 720)  # 图像尺寸


# ************************************************************************************************************

# *****************************************Little Stereo Param MatlabAuto***************************************************
# left_camera_matrix = np.array([[490.7535, -0.0117, 310.7994],
#                                [0, 490.8401, 262.6784],
#                                [0, 0, 1]])
#
# left_distortion = np.array([[0.0613, 0.1157, 0.00029, 0.00018, -0.3991]])
#
# right_camera_matrix = np.array([[492.5555, -0.1940, 331.4132],
#                                 [0, 492.6360, 241.9927],
#                                 [0, 0, 1]])
#
# right_distortion = np.array([[0.0521, 0.1648, 0.00020, 0.00025, -0.4944]])
#
# R = np.matrix([
#     [1.0000, -0.00060, 0.0038],
#     [0.00059, 1.0000, 0.0013],
#     [-0.0038, -0.0013, 1.0000],
# ])
#
# print(R)
#
# T = np.array([-99.2088, -0.1603, -0.1892])  # 平移关系向量
#
# size = (640, 480)  # 图像尺寸




# 进行立体更正
R1, R2, P1, P2, Q, validPixROI1, validPixROI2 = cv2.stereoRectify(left_camera_matrix, left_distortion,
                                                                  right_camera_matrix, right_distortion, size, R,
                                                                  T)
# 计算更正map
# left_map1, left_map2 = cv2.initUndistortRectifyMap(left_camera_matrix, left_distortion, R1, P1, size, cv2.CV_16SC2)
# right_map1, right_map2 = cv2.initUndistortRectifyMap(right_camera_matrix, right_distortion, R2, P2, size, cv2.CV_16SC2)

left_map1, left_map2 = cv2.initUndistortRectifyMap(left_camera_matrix, left_distortion, R1, P1, size, cv2.CV_32FC1)
right_map1, right_map2 = cv2.initUndistortRectifyMap(right_camera_matrix, right_distortion, R2, P2, size, cv2.CV_32FC1)
